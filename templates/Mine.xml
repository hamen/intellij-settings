<templateSet group="Mine">
  <template name="viewmodelLaunch" value="viewModelScope.launch { $SELECTION$ }" description="" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="onIO" value="withContext(Dispatchers.IO) {&#10;    $SELECTION$&#10;}" description="" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="by lazy" value="by lazy { $SELECTION$ }" description="" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="tinder" value="Timber.d($MESSAGE$)" description="" toReformat="true" toShortenFQNames="true">
    <variable name="MESSAGE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="lifecycleScope" value="lifecycleScope.launch { $SELECTION$ }" description="" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="test" value="@Test&#10;fun `$1$`() = rule.runBlockingTest {&#10;&#10;}" description="" toReformat="true" toShortenFQNames="true">
    <variable name="1" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN_CLASS" value="true" />
    </context>
  </template>
  <template name="that" value="assertThat($PARAM$).is$WHAT$" description="" toReformat="true" toShortenFQNames="true">
    <variable name="PARAM" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="WHAT" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN" value="true" />
      <option name="KOTLIN_CLASS" value="false" />
      <option name="KOTLIN_COMMENT" value="false" />
      <option name="KOTLIN_TOPLEVEL" value="false" />
    </context>
  </template>
  <template name="exwhen" value="when($SELECTION$){}.exhaustive" description="" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="ifelse" value="if($VARIABLE$ == $CONDITION$) {&#10;    TODO()&#10;} else {&#10;    TODO()&#10;}" description="" toReformat="false" toShortenFQNames="true">
    <variable name="VARIABLE" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="CONDITION" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
</templateSet>